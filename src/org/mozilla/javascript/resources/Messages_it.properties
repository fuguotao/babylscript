# Translation by 
#
#
# Default JavaScript messages file.
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Rhino code, released
# May 6, 1999.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1997-1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Norris Boyd
#   Bob Jervis
#
# Alternatively, the contents of this file may be used under the terms of
# the GNU General Public License Version 2 or later (the "GPL"), in which
# case the provisions of the GPL are applicable instead of those above. If
# you wish to allow use of your version of this file only under the terms of
# the GPL and not to allow others to use your version of this file under the
# MPL, indicate your decision by deleting the provisions above and replacing
# them with the notice and other provisions required by the GPL. If you do
# not delete the provisions above, a recipient may use your version of this
# file under either the MPL or the GPL.
#
# ***** END LICENSE BLOCK *****

# This is replaced during jar assembly from property string
# and should not be translated
implementation.version = @IMPLEMENTATION.VERSION@

#
# To add JavaScript error messages for a particular locale, create a
# new Messages_[locale].properties file, where [locale] is the Java
# string abbreviation for that locale.  For example, JavaScript
# messages for the Polish locale should be located in
# Messages_pl.properties, and messages for the Italian Swiss locale
# should be located in Messages_it_CH.properties.  Message properties
# files should be accessible through the classpath under
# org.mozilla.javascript.resources
#
# See:
# java.util.ResourceBundle
# java.text.MessageFormat
#

# SomeJavaClassWhereUsed

# Codegen
msg.dup.parms =\
    Nome del parametro duplicato "{0}".

msg.too.big.jump =\
    Programma troppo complesso: I passaggi tra gli offset sono troppo grandi..

msg.too.big.index =\
    Programma troppo complesso: indice interno supera il limite di 64k.

msg.while.compiling.fn =\
    Incontrato un errore di generazione codice durante la compilazione della funzione "{0}": {1}

msg.while.compiling.script =\
    Incontrato un errore di generazione codice durante la compilazione dello script: {0}

# Context
msg.ctor.not.found =\
    Costruttore per "{0}" non trovato.

msg.not.ctor =\
    "{0}" non \u00e8 un costruttore.

# FunctionObject
# Do not translate "(Context cx, Object[] args, Function ctorObj, boolean inNewExpr)"
msg.varargs.ctor =\
    Il metodo o il costruttore  "{0}" deve essere statico con la firma \
    "(Context cx, Object[] args, Function ctorObj, boolean inNewExpr)" \
    per definire un costruttore di argomenti variabili.

# Do not translate "(Context cx, Scriptable thisObj, Object[] args, Function funObj)"
msg.varargs.fun =\
    Il metodo "{0}" deve essere statico con la firma \
    "(Context cx, Scriptable thisObj, Object[] args, Function funObj)" \
    per definire una funzione di argomenti variabili.

msg.incompat.call =\
    Il metodo "{0}" ha chiamato un oggetto incompatibile.

msg.bad.parms =\
    Tipo di parametro non supportato "{0}" nel metodo "{1}".

msg.bad.method.return =\
    Valore di ritorno non supportato "{0}" nel metodo "{1}".

msg.bad.ctor.return =\
    La costruzione di oggetti di tipo "{0}" non \u00e8 supportato.

msg.no.overload =\
    Il metodo "{0}" \u00e8 presente pi\u00f9 volte nella classe "{1}".

msg.method.not.found =\
    Metodo "{0}" non trovato in "{1}".

# IRFactory

msg.bad.for.in.lhs =\
    Il ciclo per..in presenta un elemento sinistro non valido.

msg.mult.index =\
    Il ciclo per..in prevede solo una variabile.

msg.bad.for.in.destruct =\
    Il lato sinistro di un ciclo per..in deve essere una matrice di lunghezza 2  \
    per accettare coppie chiave/valore.
    
msg.cant.convert =\
    Non posso convertire nel tipo "{0}".

msg.bad.assign.left =\
    Assegnazione non valida nel lato sinistro.

msg.bad.decr =\
    Operatore di decremento non valido.

msg.bad.incr =\
    Operatore di incremento non valido.

msg.bad.yield =\
    rendere deve essere in una funzione.

msg.yield.parenthesized =\
    l'espressione rendere deve essere tra parentesi.

# NativeGlobal
msg.cant.call.indirect =\
    La funzione "{0}" deve essere chiamata direttamente, e non tramite una \
    funzione di altro nome.

msg.eval.nonstring =\
    Chiamare valutare() con niente altro che un valore stringa primitivo \
   ritorna semplicemente il valore. Intendevi questo?

msg.eval.nonstring.strict =\
    Chiamare valutare() con niente altro che un valore stringa primitivo \
    non \u00e8 permesso in modalit\u00e0 severa.


msg.bad.destruct.op =\
    Operarore di assegnazione destrutturazione non valido.

# NativeCall
msg.only.from.new =\
    "{0}" pu\u00f2 essere invocato solo da una "nuova" espressione.

msg.deprec.ctor =\
    Il costruttore "{0}" \u00e8 dismesso.

# NativeFunction
msg.no.function.ref.found =\
    nessuna sorgente trovata per decompilare la funzione di riferimento {0}

msg.arg.isnt.array =\
    Il secondo argomento di Funzione.prototipo.applicare deve essere una matrice

# NativeGlobal
msg.bad.esc.mask =\
    maschera di liberare non valida.

# NativeJavaClass
msg.cant.instantiate =\
    errore nella istanza ({0}): la classe {1} \u00e8 una interfaccia o astratta

msg.bad.ctor.sig =\
    Trovato costruttore con firma errata: \
    {0} chiama {1} con firma {2}

# Do not translate getClass()
msg.not.java.obj =\
    L'argomento di getClass() deve essere un oggetto Java.

msg.no.java.ctor =\
    Costruttore Java per "{0}" con argomenti "{1}" non trovato.

# NativeJavaMethod
msg.method.ambiguous =\
    La scelta del metodo Java {0}.{1} associata ai tipi di argomenti JavaScript ({2}) \u00e8 ambiguo; \
    i metodi candidati sono: {3}

msg.constructor.ambiguous =\
    La scelta del costruttore Java {0} associata ai tipi di argomenti JavaScript ({1}) \u00e8 ambiguo; \
    i costruttori candidati sono: {2}

# NativeJavaObject
msg.conversion.not.allowed =\
    Non posso convertire {0} in {1}

msg.no.empty.interface.conversion =\
    Non posso convertire {0} in interfaccia {1} senza metodi

msg.no.function.interface.conversion =\
    Non posso convertire la funzione  {0} in interfaccia siccome contiene metodi con \
    firme differenti

# NativeJavaPackage
# Do not translate Packages, java.lang.Classloader
msg.not.classloader =\
    Il costruttore per  "Packages" aspetta argomenti di tipo java.lang.Classloader

# NativeRegExp
msg.bad.quant =\
    Quantificatore invalido {0}

msg.overlarge.backref =\
    Ritorno di riferimento troppo grande {0}

msg.overlarge.min =\
    Minimo troppo grande {0}

msg.overlarge.max =\
    Massimo troppo grande {0}

msg.zero.quant =\
    Quantificatore Zero {0}

msg.max.lt.min =\
    Massimo {0} minore del minimo

msg.unterm.quant =\
    Quantificatore non chiuso {0}

msg.unterm.paren =\
    Parentesi non chiusa {0}

msg.unterm.class =\
    Carattere della classe non chiusa {0}

msg.bad.range =\
    Intervallo non valido nel carattere della classe.

msg.trail.backslash =\
    \\ in espressione regolare.

msg.re.unmatched.right.paren =\
    Parentesi ) non aperta in espressione regolare.

msg.no.regexp =\
    Espressioni regolari non disponibili.

msg.bad.backref =\
    Numero di parentesi eccessivo.

msg.bad.regexp.compile =\
    Solo un argomento pu\u00f2 essere specificato se il primo argomento di \
    RegExp.prototype.compile \u00e8 un oggetto EspressioneRegolare.

# Parser
msg.got.syntax.errors = \
   La compilazione ha generato {0} errori di sintassi.

msg.var.redecl =\
    TypeError: ridichiarazione di variabile {0}.

msg.const.redecl =\
    TypeError: ridichiarazione di costante {0}.
    
msg.let.redecl =\
    TypeError: ridichiarazione di variabile {0}.

msg.parm.redecl =\
	TypeError: ridichiarazione di parametro formale {0}.

msg.fn.redecl =\
    TypeError: ridichiarazione di funzione {0}.

msg.let.decl.not.in.block =\
    SyntaxError: dichiarazione di scrittura non inclusa in un blocco

# NodeTransformer
msg.dup.label =\
    etichetta duplicata

msg.undef.label =\
    etichetta non definita

msg.bad.break =\
    interruzione senza etichetta deve essere contenuta in un ciclo

msg.continue.outside =\
    continuare deve essere contenuto in un ciclo

msg.continue.nonloop =\
    continurare pu\u00f2 utilizzare esclusivamente etichette di dichiarazione di iterazioni

msg.bad.throw.eol =\
    Fine linea non \u00e8 permesso tra la parola chiave gettare e l'espressione gettare
    Line terminator is not allowed between the throw keyword and throw \
    expression.

msg.no.paren.parms =\
    parentesi ( mancante prima dei parametri della funzione

msg.no.parm =\
    parametro formale mancante

msg.no.paren.after.parms =\
    parentesi ) mancante dopo i parametri formali

msg.no.brace.body =\
    parentesi '{' mancante prima del corpo della funzione

msg.no.brace.after.body =\
    parentesi } mancante dopo il corpo della funzione

msg.no.paren.cond =\
    parentesi ( mancante prima della condizione

msg.no.paren.after.cond =\
    parentesi ( mancante dopo la condizione

msg.no.semi.stmt =\
    ';' mancante prima della dichiarazione

msg.no.name.after.dot =\
    nome mancante dopo l'operatore '.'

msg.no.name.after.coloncolon =\
    nome mancante dopo l'operatore '::'

msg.no.name.after.dotdot =\
    nome mancante dopo l'operatore '..'

msg.no.name.after.xmlAttr =\
    nome mancante dopo l'operatore '.@'

msg.no.bracket.index =\
    parentesi ] mancante nell'indice dell'espressione

msg.no.paren.switch =\
    parentesi ( mancante prima dell'espressione smistare

msg.no.paren.after.switch =\
    parentesi ) mancante dopo l'espressione smistare

msg.no.brace.switch =\
    parentesi '{' mancante prima del corpo di smistare

msg.bad.switch =\
    dichiarazione switch non valida

msg.no.colon.case =\
    ':' mancante dopo l'espressione del caso

msg.double.switch.default =\
    doppia etichetta di defauls nella dichiarazione di smistare

msg.no.while.do =\
    mentre mancante dopo il corpo del ciclo esegui

msg.no.paren.for =\
    parentesi ( mancante dopo ciclo per

msg.no.semi.for =\
    ';' mancante dopo inizializzatore ciclo per

msg.no.semi.for.cond =\
    ';' mancante dopo condizione ciclo per
    
msg.in.after.for.name =\
    'in' mancante dopo ciclo per

msg.no.paren.for.ctrl =\
    parentesi ')' mancante dopo controllo ciclo per

msg.no.paren.with =\
    parentesi ( mancante prima della dichiarazione dell'oggetto con

msg.no.paren.after.with =\
    parentesi ) mancante dopo la dichiarazione dell'oggetto con

msg.no.paren.after.let =\
    parentesi ( mancante dopo assegnare

msg.no.paren.let =\
    parentesi ) mancante dopo elenco variabili

msg.no.curly.let =\
    parentesi } mancante dopo dichiarazione di assegnazione

msg.bad.return =\
    valore di ritorno non valido

msg.no.brace.block =\
    parentesi } mancante nella dichiarazione composta

msg.bad.label =\
    etichetta non valida

msg.bad.var =\
    nome variabile mancante

msg.bad.var.init =\
    inizializzazione variabile non valida

msg.no.colon.cond =\
    ':' mancante nell'espressione condizionale

msg.no.paren.arg =\
    parentesi ) mancante dopo l'elenco degli argomenti

msg.no.bracket.arg =\
    parentesi ] mancante dopo l'elemento della lista

msg.bad.prop =\
    id di propriet\u00e0 non valido

msg.no.colon.prop =\
    ':' mancante dopo l'id di propriet\u00e0

msg.no.brace.prop =\
    parentesi } mancante dopo propriet\u00e0 della lista

msg.no.paren =\
    parentesi ) mancante nell'espressione\u00ec

msg.reserved.id =\
   identificatore \u00e8 una parola riservata

msg.no.paren.catch =\
    parentesi ( mancante prima di una blocco di condizione intercetta

msg.bad.catchcond =\
    blocco di condizione intercetta non valido

msg.catch.unreachable =\
    le clausole di intercetta che seguono un intercetta non qualificato non sono raggiungibili

msg.no.brace.try =\
    parentesi '{' mancante prima di un blocco tentare

msg.no.brace.catchblock =\
    parentesi '{' mancante prima del corpo di un blocco intercetta

msg.try.no.catchfinally =\
    ''tentare'' senza ''intercetta'' oppure ''infine''

msg.no.return.value =\
  La funzione {0} non ritorna sempre un valore

msg.anon.no.return.value =\
  La funzione anonima non ritorna sempre un valore

msg.return.inconsistent =\
  La dichiarazione di ritorno \u00e8 inconsistente con l'utilizzo precedente

msg.generator.returns =\
  TypeError: La funzione generatore {0} ritorna un valore

msg.anon.generator.returns =\
  TypeError: La funzione generatore anonima ritorna un valore

msg.syntax =\
    errore di sintassi

msg.unexpected.eof =\
    Fine inattesa del file

msg.XML.bad.form =\
    Sintassi XML non valida

msg.XML.not.available =\
    XML non disponibile

msg.too.deep.parser.recursion =\
    Troppe recursione durante l'analisi

msg.no.side.effects =\
    Il codice non ha effetti collaterali

msg.extra.trailing.comma =\
    L'inizializzatore di oggetti ECMA-262 non prevede virgole finali

msg.equal.as.assign =\
    La verifica per uguaglianza (==) \u00e8 stata digitata come assegnazione (=)?

msg.var.hides.arg =\
    La variabile {0} nasconde argomenti

msg.destruct.assign.no.init =\
    =  mancante nella dichiarazione di destrutturazione

# ScriptRuntime
msg.no.properties =\
    {0} non ha propriet\u00e0.

msg.invalid.iterator =\
    Valore di iteratore non valido

msg.iterator.primitive =\
    __iteratorr__ ha restituito un valore primitivo

msg.assn.create.strict =\
    Assegnazione di variabile non dichiarata {0}

msg.ref.undefined.prop =\
    Referenza ad una propriet\u00e0 non definita "{0}"

msg.prop.not.found =\
    Propriet\u00e0 {0} non trovata.

msg.set.prop.no.setter =\
    Non posso impostare una propriet\u00e0 {0} che ha solo il metodo lettura.

msg.invalid.type =\
    Valore JavaScript di tipo {0} non valido

msg.primitive.expected =\
    Tipo primitivo previsto (aveva invece {0})

msg.namespace.expected =\
    Oggetto degli spazi dei nomi previsto a sinistra di :: (trovato invece {0})

msg.null.to.object =\
    Non posso convertire il valore nullo in un oggetto.

msg.undef.to.object =\
    Non posso convertire il valore non definito in un oggetto.

msg.cyclic.value =\
    Valore ciclico {0} non consentito.

msg.is.not.defined =\
    "{0}" non \u00e8 definito.

msg.undef.prop.read =\
    Non posso leggere la propriet\u00e0 "{1}" da {0}

msg.undef.prop.write =\
    Non posso impostare la propriet\u00e0 "{1}" di {0} da "{2}"

msg.undef.prop.delete =\
    Non posso cancallare la propriet\u00e0 "{1}" di {0}

msg.undef.method.call =\
    Non posso chiamare il metodo "{1}" di {0}

msg.undef.with =\
    Non posso applicare il metodo "con" a {0}

msg.isnt.function =\
    {0} non \u00e8 una funzione, \u00e8 {1}.

msg.isnt.function.in =\
    Non posso chiamare la propriet\u00e0 {0} nell'oggetto {1}. Non \u00e8 una funzione, \u00e8 "{2}".

msg.function.not.found =\
    Non posso trovare la funzione {0}.

msg.function.not.found.in =\
    Non posso trovare la funzione {0} nell'oggetto {1}.

msg.isnt.xml.object =\
    {0} non \u00e8 un oggetto XML.

msg.no.ref.to.get =\
    {0} non \u00e8 un riferimento al valore di lettura.

msg.no.ref.to.set =\
    {0} non \u00e8 un riferimento al valore di scrittura di {1}.

msg.no.ref.from.function =\
    La funzione {0} non pu\u00f2 essere utilizzata come valore di assegnazione di sinistra \
    o come un operando degli operatori ++ o --.

# Do not translate getDefaultValue()
msg.bad.default.value =\
    Il metodo getDefaultValue() dell'oggetto ha restituito un oggetto.

msg.instanceof.not.object = \
    Non \u00e8 possibile utilizzare istanzaDi su un non-oggetto.

msg.instanceof.bad.prototype = \
    La propriet\u00e0 ''prototipo'' di {0} non \u00e8 un oggetto.

msg.bad.radix = \
    Radice illegale {0}.

# ScriptableObject
msg.default.value =\
    Non posso trovare il valore di defaulf per l'oggetto.

msg.zero.arg.ctor =\
    Non posso caricare la classe "{0}" che ha un costruttore con parametri.

duplicate.defineClass.name =\
    Metodo "{0}" non valido: nome "{1}" \u00e8 gi\u00e0 utilizzato.

msg.ctor.multiple.parms =\
    Non posso definire il costruttore o la classe {0} siccome pi\u00f9 \
    costruttori hanno parametri multipli.

# Do not translate ScriptableObject
msg.extend.scriptable =\
    {0} deve estendere ScriptableObject per defire la propriet\u00e0 {1}.

# Do not translate ScriptableObject
msg.bad.getter.parms =\
    Per definire una propriet\u00e0, il lettore {0} deve avere zero parametri \
    o un singolo parametro ScriptableObject.

# Do not translate ScriptableObject
msg.obj.getter.parms =\
    Previsto un lettore statico o delegato {0} per prelevare un parametro ScriptableObject.

msg.getter.static =\
    Lettore e scrittore devono essere entrambi statici o entrambi non statici.

msg.setter.return =\
    Lo scrittore deve avere un ritorno del tipo vuoto: {0}

# Do not translate ScriptableObject
msg.setter2.parms =\
    Uno scrittore con due parametri deve avere ScriptableObject come primo parametro.

msg.setter1.parms =\
    Previsto un singolo parametro per  {0}

msg.setter2.expected =\
    Previsto uno scrittore statico o delegato {0} per prendere due parametri.

msg.setter.parms =\
    Previsti uno o due parametri per lo scrittore.

msg.setter.bad.type =\
    Tipo di parametro non supportato "{0}" nello scrittore "{1}".

msg.add.sealed =\
    Non posso aggiungere una propriet\u00e0 ad un oggetto chiuso: {0}.

msg.remove.sealed =\
    Non posso rimuovere una propriet\u00e0 da un oggetto chiuso: {0}.

msg.modify.sealed =\
    Non posso modificare una propriet\u00e0 di un oggetto chiuso: {0}.

msg.modify.readonly =\
    Non \u00e8 possibile modificare propriet\u00e0 in sola lettura: {0}.

# TokenStream
msg.missing.exponent =\
    Esponente mancante

msg.caught.nfe =\
    Errore nel formato del numero

msg.unterminated.string.lit =\
    Stringa letterale non terminata

msg.unterminated.comment =\
    Commento non terminato

msg.unterminated.re.lit =\
    Espressione regolare letterale non terminata

msg.invalid.re.flag =\
    Definizione non valida dopo espressione regolare

msg.no.re.input.for =\
    Nessun input per {0}

msg.illegal.character =\
    Carattere non valido

msg.invalid.escape =\
    Sequenza Unicode non valida.

msg.bad.namespace =\
    Definizione dello spazio dei nomi di default non valido. \
    La sintassi \u00e8:: default xml namespace = EXPRESSION;

# TokensStream warnings
msg.bad.octal.literal =\
    Ottale non valido {0}; interpretato come un decimale

msg.reserved.keyword =\
    uso non consentito di parole riservate future {0}; interpretate come identificatore ordinario

# LiveConnect errors
msg.java.internal.field.type =\
    Errore interno: Conversione del tipo di {0} da assegnare a {1} su {2} fallita.

msg.java.conversion.implicit_method =\
    Non posso trovare un metodo di conversione "{0}" per la classe {1}.

msg.java.method.assign =\
    Il metodo Java "{0}" non pu\u00f2 essere assegnato.

msg.java.internal.private =\
    Errore interno: tentativo di accesso ad un campo privato/protetto "{0}".

msg.java.no_such_method =\
    Non posso trovare il metodo {0}.

msg.script.is.not.constructor =\
    Gli oggetti dello script non sono costruttori.

msg.nonjava.method =\
    Il metodo Java "{0}" \u00e8 stato invocato con {1} come valore di "questo" che non pu\u00f2 essere convertito nel tipo Java {2}.

msg.java.member.not.found =\
    La classe Java "{0}" non ha nessuna istanza pubblica del campo o del meotodo "{1}".

msg.java.array.index.out.of.bounds =\
    L'indice {0} della matrice \u00e8 fuori dai margini [0..{1}].

msg.java.array.member.not.found =\
    Gli insiemi Java non hanno campi o metodi pubblici chiamati "{0}".

msg.pkg.int =\
    I nomi dei pacchetti Java non possono essere numeri.

msg.access.prohibited =\
    L'accesso alla classe Java "{0}" \u00e8 vietato.

# ImporterTopLevel
msg.ambig.import =\
    Import ambiguo: "{0}" e "{1}".

# Do not translate importPackage 
msg.not.pkg =\
    La funzione importPackage deve essere chiamata con un pacchetto; invece aveva "{0}".

# Do not translate importClass 
msg.not.class =\
    La funzione importClass deve essere chiamata con una classe; invece aveva "{0}".

msg.not.class.not.pkg =\
    "{0}" non \u00e8 n\u00e8 una classe n\u00e8 un pacchetto.

msg.prop.defined =\
    Non posso importare "{0}" perch\u00e8 una propriet\u00e0 con quel nome \u00e8 gi\u00e0 definita.

#JavaAdapter
# Do not translate JavaAdapter 
msg.adapter.zero.args =\
    JavaAdapter richiede almeno un argomento.

msg.not.java.class.arg = \
    L'argomento {0} non \u00e8 una classe Java: {1}.

#JavaAdapter
# Do not translate JavaAdapter 
msg.only.one.super = \
    Solo una classe pu\u00f2 essere estesa da un JavaAdapter. Aveva {0} e {1}.


# Arrays
msg.arraylength.bad =\
    Lunghezza della matrice inappropriata.

# Arrays
msg.arraylength.too.big =\
    La lunghezza della matrice {0} supera il limite della capacit\u00e0 supportata.

# URI
msg.bad.uri =\
    Sequenza URI non valida.

# Number
msg.bad.precision =\
    Precisione {0} fuori intervallo.

# NativeGenerator
msg.send.newborn =\
  Tentativo di inviare un valore ad un nuovo generatore

msg.already.exec.gen =\
    generatore gi\u00e0 in esecuzione
    
msg.StopIteration.invalid =\
    StopIteration non pu\u00f2 essere cambiato in un oggetto arbitrario.

# Interpreter
msg.yield.closing =\
  rendere da un generatore chiuso

# New Babylscript Stuff
msg.unknown.language.mode =\
  Tipo linguaggio sconosciuto
